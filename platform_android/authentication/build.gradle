import co.joebirch.minimise.buildsrc.*

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
kapt {
    correctErrorTypes = true
    useBuildCache = true
}

apply plugin: 'kotlin-android-extensions'
androidExtensions {
    experimental = true
}

android {
    compileSdkVersion Versions.compileSdk

    defaultConfig {
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        buildConfigField 'String', 'FIREBASE_API_KEY',
                "\"" + getKey('FIREBASE_API_KEY') + "\""
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(":platform_android:core")
    implementation project(":platform_android:authentication-ui")
    implementation project(":platform_android:navigation")
    implementation project(':shared:SharedCommon')
    implementation project(':shared:SharedAuthentication')
    implementation project(':platform_android:common-ui')

    implementation Deps.AndroidX.appCompat
    implementation Deps.AndroidX.coreKtx

    implementation Deps.Dagger.dagger
    kapt Deps.Dagger.compiler

    implementation Deps.Fragment.base
    implementation Deps.Fragment.ktx

    implementation Deps.Google.material

    implementation Deps.Kotlin.stdLib

    implementation Deps.Lifecycle.common
    implementation Deps.Lifecycle.viewModelKtx

    testImplementation Deps.junit

    androidTestImplementation Deps.AndroidX.junit
    androidTestImplementation Deps.Espresso.core
    androidTestImplementation Deps.Fragment.testing
}

def getKey(String key) {
    def Properties props = new Properties()
    props.load(new FileInputStream(file('../../local.properties')))
    return props[key]
}
